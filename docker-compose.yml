services:
  bobot:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    image: docker.io/gnu3ra/dijkstra
    ports:
      - "8080:8080"
    volumes:
      - ./config:/config:z
    depends_on:
      migrate:
        condition: service_completed_successfully
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: migrate
    image: docker.io/gnu3ra/dijkstra_migrate
    volumes:
      - cargo-cache:/home/bobot/.cargo/registry
    environment:
      - DATABASE_URL=postgresql://bobot:changeme@db/bobot
    depends_on:
      db:
        condition: service_healthy
  db:
    image: docker.io/postgres:15.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=bobot
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_DB=bobot
    volumes: 
      - bobot-db:/var/lib/postgresql/data 
    healthcheck:
      test: pg_isready -U bobot
      interval: 10s
      timeout: 3s
      retries: 10
  redis:
    image: docker.io/redis:7.0.7-alpine
    restart: always
    volumes: 
      - bobot-redis:/data  
  prometheus:
    image: docker.io/prom/prometheus:v2.41.0
    ports:
      - 9000:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
       
volumes:
  bobot-redis:
  bobot-db:
  prometheus-data:
  cargo-cache:
  migration-target: